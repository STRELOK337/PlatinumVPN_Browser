<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:CompileBindings="True">
	<Design.PreviewWith>
		<Border Padding="20">
			<ListBox SelectedIndex="0">
				<ListBoxItem>Test</ListBoxItem>
				<ListBoxItem>Test</ListBoxItem>
				<ListBoxItem>Test</ListBoxItem>
				<ListBoxItem>Test</ListBoxItem>
			</ListBox>
		</Border>
	</Design.PreviewWith>

	<!--  ListBox comes from WinUI ListBox style  -->
	<ControlTheme x:Key="{x:Type ListBox}" TargetType="ListBox">
		<Setter Property="Foreground" Value="{DynamicResource ListBoxForeground}" />
		<Setter Property="Background" Value="{DynamicResource ListBoxBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ListBoxBorder}" />
		<Setter Property="BorderThickness" Value="{DynamicResource ListBoxBorderThemeThickness}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True" />
		<Setter Property="ScrollViewer.IsScrollInertiaEnabled" Value="True" />
		<Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
		<Setter Property="Template">
			<ControlTemplate>
				<Border
                    Name="border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
					<ScrollViewer
                        Name="PART_ScrollViewer"
                        AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}"
                        Background="{TemplateBinding Background}"
                        HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                        HorizontalSnapPointsType="{TemplateBinding (ScrollViewer.HorizontalSnapPointsType)}"
                        IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
                        IsScrollInertiaEnabled="{TemplateBinding (ScrollViewer.IsScrollInertiaEnabled)}"
                        VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
                        VerticalSnapPointsType="{TemplateBinding (ScrollViewer.VerticalSnapPointsType)}">
						<ItemsPresenter
                            Name="PART_ItemsPresenter"
                            Margin="{TemplateBinding Padding}"
                            ItemsPanel="{TemplateBinding ItemsPanel}" />
					</ScrollViewer>
				</Border>
			</ControlTemplate>
		</Setter>
	</ControlTheme>

	<!--
        ListBoxItem styles use the WinUI ListViewItem style, however, WinUI is missing a bunch of
        necessary parts in their public release... (primarily missing ListViewItemPresenter style)
        So, this is faked to look like what it should
        Use the 21h1 Styles!
    -->
	<ControlTheme x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
		<Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
		<Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
		<Setter Property="Background" Value="{DynamicResource ListViewItemBackground}" />
		<Setter Property="CornerRadius" Value="20" />
		<Setter Property="Foreground" Value="{DynamicResource ListViewItemForeground}" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="0 0 0 0" />
		<Setter Property="Margin" Value="5" />
		<Setter Property="MinHeight" Value="{DynamicResource ListViewItemMinHeight}" />
		<Setter Property="Template">
			<ControlTemplate>
				<Panel>
					<ContentPresenter
                        Name="PART_ContentPresenter"
                        Margin="0"
                        Padding="0,0,0,0"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="White"
                        BorderThickness="1"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        CornerRadius="20" />

					<!--
                        added 1px left margin, otherwise we can get strange artifacts while
                        animating, I'm guessing from bad invalidation rects?
                    -->

				</Panel>
			</ControlTemplate>
		</Setter>


		<Style Selector="^:disabled">
			<!--  There's no Disabled brush for LVI, so just dim opacity  -->
			<Setter Property="Opacity" Value="0.5" />
		</Style>

		<Style Selector="^:pointerover">
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Background" Value="{DynamicResource ListViewItemBackgroundPointerOver}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundPointerOver}" />
			</Style>
		</Style>

		<Style Selector="^:pressed">
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Background" Value="{DynamicResource ListViewItemBackgroundPressed}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter">
				<Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundPressed}" />
			</Style>
		</Style>

		<Style Selector="^:selected">
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Background" Value="{DynamicResource ListViewItemBackgroundSelected}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter">
				<Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundSelected}" />
			</Style>
			<Style Selector="^ /template/ Rectangle#SelectionIndicator">
				<Setter Property="IsVisible" Value="True" />
				<Setter Property="RenderTransform" Value="scaleY(1)" />
			</Style>
			<Style Selector="^:not(:focus) /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Background" Value="{DynamicResource ListViewItemBackgroundSelected}" />
			</Style>
			<Style Selector="^:not(:focus) /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundSelected}" />
			</Style>


			<Style Selector="^:pointerover">
				<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
					<Setter Property="Background" Value="{DynamicResource ListViewItemBackgroundSelectedPointerOver}" />
				</Style>
				<Style Selector="^ /template/ ContentPresenter">
					<Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundSelectedPointerOver}" />
				</Style>
				<Style Selector="^ /template/ Rectangle#SelectionIndicator">
					<Setter Property="Fill" Value="{DynamicResource ListViewItemSelectionIndicatorPointerOverBrush}" />
				</Style>
			</Style>

			<Style Selector="^:pressed">
				<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
					<Setter Property="Background" Value="{DynamicResource ListViewItemBackgroundSelectedPressed}" />
				</Style>
				<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
					<Setter Property="Foreground" Value="{DynamicResource ListViewItemForegroundSelectedPressed}" />
				</Style>
				<Style Selector="^ /template/ Rectangle#SelectionIndicator">
					<Setter Property="Fill" Value="{DynamicResource ListViewItemSelectionIndicatorPressedBrush}" />
					<!--  TODO: Uncomment when Avalonia fixes selection to work on pointer up  -->
					<!--<Setter Property="RenderTransform" Value="scaleY(0.5)" />-->
				</Style>
			</Style>

			<Style Selector="^:disabled /template/ Rectangle#SelectionIndicator">
				<Setter Property="Fill" Value="{DynamicResource ListViewItemSelectionIndicatorDisabledBrush}" />
			</Style>
		</Style>
	</ControlTheme>
</ResourceDictionary>
